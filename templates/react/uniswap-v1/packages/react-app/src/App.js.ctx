{
  "callToAction": "Read On-Chain Exchange Rate",
  "graphqlQueryName": "GET_EXCHANGES",
  "hooks": {
    "readData": [
      "if (!loading && !error && data && data.exchanges) {",
      "  console.log({ exchanges: data.exchanges });",
      "}"
    ]
  },
  "imports": [
    "import { MAINNET_ID, addresses, abis } from \"@uniswap-v1-app/contracts\";",
    "import GET_EXCHANGES from \"./graphql/subgraph\";"
  ],
  "learnUrl": "https://uniswap.org/docs/v1/",
  "readOnChainData": [
    "// Should replace with the end-user wallet, e.g. Metamask",
    "const defaultProvider = getDefaultProvider();",
    "// Create an instance of an ethers.js Contract",
    "// Read more about ethers.js on https://docs.ethers.io/v5/api/contract/contract/",
    "const ethDaiExchangeContract = new Contract(",
    "  addresses[MAINNET_ID].exchanges[\"ETH-DAI\"],",
    "  abis.exchange,",
    "  defaultProvider,",
    ");",
    "// Price of 1 ETH in DAI",
    "const exchangeRate = await ethDaiExchangeContract.getEthToTokenInputPrice(\"1000000000000000000\");",
    "console.log({ exchangeRate: exchangeRate.toString() });"
  ],
  "whatToLearn": "Uniswap v1"
}
