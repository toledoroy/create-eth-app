{
  "callToAction": "Read On-Chain Balance",
  "graphqlQueryName": "GET_TRANSFERS",
  "hooks": {
    "readData": [
      "if (!loading && !error && data && data.transfers) {",
      "  console.log({ transfers: data.transfers });",
      "}"
    ]
  },
  "imports": [
    "import { addresses, abis } from \"@project/contracts\";",
    "import GET_TRANSFERS from \"./graphql/subgraph\";"
  ],
  "learnUrl": "https://thegraph.com/docs/quick-start",
  "readOnChainData": [
    "// Should replace with the end-user wallet, e.g. Metamask",
    "const defaultProvider = getDefaultProvider();",
    "// Create an instance of an ethers.js Contract",
    "// Read more about ethers.js on https://docs.ethers.io/v5/api/contract/contract/",
    "const ceaErc20 = new Contract(addresses.ceaErc20, abis.erc20, defaultProvider);",
    "// A pre-defined address that owns some CEAERC20 tokens",
    "const tokenBalance = await ceaErc20.balanceOf(\"0x3f8CB69d9c0ED01923F11c829BaE4D9a4CB6c82C\");",
    "console.log({ tokenBalance: tokenBalance.toString() });"
  ],
  "whatToLearn": "The Graph"
}
